// <auto-generated />
using BambooFinder.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BambooFinder.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210622160334_CreateNurseries")]
    partial class CreateNurseries
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("BambooFinder.Models.Nursery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("Shipping")
                        .HasColumnType("boolean");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("text");

                    b.Property<string>("Zipcode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Nurseries");
                });

            modelBuilder.Entity("BambooFinder.Models.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Clumping")
                        .HasColumnType("boolean");

                    b.Property<string>("Info")
                        .HasColumnType("text");

                    b.Property<int>("MaxHeight")
                        .HasColumnType("integer");

                    b.Property<int>("MaxLight")
                        .HasColumnType("integer");

                    b.Property<int>("MaxZone")
                        .HasColumnType("integer");

                    b.Property<int>("MinHeight")
                        .HasColumnType("integer");

                    b.Property<int>("MinLight")
                        .HasColumnType("integer");

                    b.Property<int>("MinZone")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("NurserySpecies", b =>
                {
                    b.Property<int>("InventoryId")
                        .HasColumnType("integer");

                    b.Property<int>("SellersId")
                        .HasColumnType("integer");

                    b.HasKey("InventoryId", "SellersId");

                    b.HasIndex("SellersId");

                    b.ToTable("NurserySpecies");
                });

            modelBuilder.Entity("NurserySpecies", b =>
                {
                    b.HasOne("BambooFinder.Models.Species", null)
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BambooFinder.Models.Nursery", null)
                        .WithMany()
                        .HasForeignKey("SellersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
